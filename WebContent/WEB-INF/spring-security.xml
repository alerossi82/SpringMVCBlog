<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- In the <http> element, we declare which URL pattern will be intercepted 
		by Spring Security filter, using the intercept-url element. As per this configuration, 
		all the URL patterns /admin** and /ArticleManager** are secured, and only the users having role 
		ROLE_ADMIN can be authorized to access these URLs -->
	<http auto-config="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/ArticleManager**" access="hasRole('ROLE_ADMIN')" />

	<!-- This code invokes the login page, which will 
		accept username and password as Http request parameters. 
		If username and password are correct, forwards to /admin URL.
		If username or password are not correct, forward to /login?error -->
		<form-login login-page="/login" 
					default-target-url="/admin" 
					username-parameter="username"
					password-parameter="password" 
					authentication-failure-url="/login?error"/>
					<!-- authentication-failure-url="/Access_Denied" -->
		
		<csrf disabled="true" />
	</http>

	<!-- authentication-manager declares a user with username, password and role (ROLE_ADMIN per this 
		configuration). This user can be authenticated to access the application -->
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="nimda" authorities="ROLE_ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

</beans:beans>
