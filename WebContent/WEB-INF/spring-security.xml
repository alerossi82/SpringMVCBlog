<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- In the <http> element, we declare which URL pattern will be intercepted 
		by Spring Security filter, using the intercept-url element. As per this configuration, 
		all the URL patterns /admin** and /ArticleManager** are secured, and only the users having role 
		ROLE_ADMIN can be authorized to access these URLs -->
	<http auto-config="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/ArticleManager**" access="hasRole('ROLE_ADMIN')" />

	<!-- This code invokes the login page, which will accept username and password as Http request parameters. 
		If username and password are correct, forwards to /admin URL.
		If username or password are not correct, forward to /login?error
		If the user does not have role admin, access is denied -->
		<form-login login-page="/login" 
					default-target-url="/admin" 
					username-parameter="username"
					password-parameter="password" 
					authentication-failure-url="/login?error"/>
		
		<csrf disabled="true" />
	</http>

	<!-- create the datasource for the DB -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<beans:property name="url"
			value="jdbc:sqlserver://localhost;databaseName=BLOG" />
		<beans:property name="username" value="alerossi82" />
		<beans:property name="password" value="telecono" />
	</beans:bean>

	<!-- retrieve username, pword and role from the DB defined in dataSource-->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="SELECT username, authority FROM authorities WHERE username = ?"
				users-by-username-query="SELECT username, password, enabled FROM users WHERE username = ?" />
		</authentication-provider>
	</authentication-manager>


        
        <!-- DEPRECATED -->
<!-- 	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="nimda" authorities="ROLE_ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager> -->

</beans:beans>
